{"version":3,"sources":["redux/action-types.js","api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","assets/imgs/logo.png","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","utils/dateUtils.js","components/link-button/index.jsx","components/header/index.jsx","pages/home/line.jsx","pages/home/home.jsx","pages/category/addCategory.jsx","pages/category/updateCategory.jsx","pages/category/category.jsx","utils/constants.js","pages/product/product-home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/user/add-update.jsx","pages/user/user.jsx","pages/role/add-role.jsx","pages/role/auth-role.jsx","pages/role/change-name.jsx","pages/role/role.jsx","pages/chart/bar.jsx","pages/chart/line.jsx","pages/chart/pie.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","REST_USER","SET_PRODUCT","ajax","url","data","method","Promise","resolve","_","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqAddOrUpdateUser","user","_id","reqUsers","reqDeleteUser","userId","reqCategories","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqAddOrUpdateProduct","product","reqUpdateStatus","productId","status","reqDeleteImg","name","reqAddRole","roleName","reqRoles","reqUpdateRole","role","reqChangeRoleName","id","reqLocation","jsonp","err","city","reqWeather","a","place","urlWeather","lives","USER_KEY","storageUtils","saveUser","store","set","getUser","removeUser","remove","setHeadTitle","headTitle","type","receiveUser","resetUser","setProduct","Login","onFinish","values","props","login","validator","value","length","test","reject","Error","this","to","errorMsg","className","src","logo","alt","initialValues","remember","Item","rules","required","whitespace","min","max","pattern","prefix","UserOutlined","style","color","placeholder","LockOutlined","htmlType","Component","connect","state","dispatch","success","msg","menuList","title","key","isPublic","icon","HomeOutlined","AppstoreOutlined","children","ApartmentOutlined","AppstoreAddOutlined","VerifiedOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","Menu","openKey","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes","reduce","pre","location","pathname","slice","cItem","push","onClick","menuNodes","path","substring","selectedKeys","defaultOpenKeys","mode","theme","withRouter","formDate","time","date","Date","getFullYear","getMonth","getDate","getHours","Number","getMinutes","getSeconds","LinkButton","Header","currentTime","formateDate","now","weather","temperature","confirm","history","replace","getLocation","setState","getWeather","getTitle","timeInterval","setInterval","secondTimeInterval","clearInterval","onConfirm","okText","cancelText","Bar","option","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","yAxis","series","stack","minHeight","Home","extra","QuestionCircleOutlined","suffix","fontWeight","valueStyle","fontSize","ArrowUpOutlined","marginLeft","ArrowDownOutlined","lassName","Option","Select","AddCategory","trim","layout","ref","c","form","addValues","initialValue","label","width","showSearch","optionFilterProp","filterOption","input","toLowerCase","categories","map","category","UpdateCategory","onChange","event","updateValue","target","categoryList","subCategoryList","loading","parentName","visible","columns","dataIndex","align","render","showSubCategoryList","shape","PlusOutlined","getCategoryList","showFirstCategoryList","result","handleAddOk","addForm","validateFields","handleUpdateOk","updateName","ArrowRightOutlined","marginRight","height","bordered","rowKey","pagination","defaultPageSize","showQuickJumper","dataSource","destroyOnClose","onOk","onCancel","BASE_IMG_URL","ProductHome","total","price","updateStatus","getProducts","list","defaultValue","margin","e","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewTitle","previewImage","fileList","handleCancel","handlePreview","preview","originFileObj","lastIndexOf","handleChange","getImgs","imgs","img","index","uid","uploadButton","marginTop","action","accept","listType","onPreview","footer","RickTextEditor","onEditorStateChange","editorState","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","getDetail","draftToHtml","convertToRaw","getCurrentContent","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","wrapperClassName","editorClassName","editorStyle","border","padding","toolbar","image","uploadCallback","present","mandatory","Form","TextArea","Input","AddUpdate","options","initOptions","isLeaf","isUpdate","pCategoryId","getCategories","subCategories","childOptions","subC","pIndex","findIndex","validatorRequired","loadData","selectedOptions","targetOption","datas","desc","categoryIds","picturesWall","current","richTextEditor","React","createRef","goBack","ArrowLeftOutlined","labelCol","span","wrapperCol","autoSize","minRows","maxRows","addonAfter","display","justifyContent","List","Detail","cName1","cName2","all","results","dangerouslySetInnerHTML","__html","Product","exact","component","AddUpdateUser","getForm","phone","email","RegExp","role_id","roles","PureComponent","User","users","selectedUser","roleNames","deleteUser","handleModalOk","Object","keys","getUsers","newUser","initRoleNames","minWidth","AddRole","AuthRole","treeData","onCheck","checkedKeys","getMenus","getTreeData","disabled","checkable","defaultExpandAll","ChangeName","selectedRole","Role","visiable","onRow","onSelect","record","getFormAdd","addRole","handleAuthOk","authRole","auth_name","getRoles","getFormChangeName","changeName","handleChangeNameOk","rowSelection","selectedRowKeys","sales","stores","update","getOption","Line","inventorys","getOption2","areaStyle","sale","inventory","Pie","subtext","x","formatter","orient","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","Footer","Layout","Sider","Content","Admin","from","Category","textAlign","alignItems","App","initUser","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c5048b4f.chunk.js","sourcesContent":["//包含多个action类型的常量标识名称的模块\r\nexport const SET_HEAD_TITLE = 'set_head_title'//设置头部标题\r\n//接收user信息\r\nexport const RECEIVE_USER='receive_user'\r\n//显示错误信息\r\nexport const SHOW_ERROR_MSG='show_error_msg'\r\n//重置user\r\nexport const REST_USER='reset_user'\r\n//设置product对象\r\nexport const SET_PRODUCT='set_product'","//能发送异步ajax请求的函数模块\r\n//封装的是axios库\r\n//函数的返回值是promise对象\r\n//1. 优化：统一处理请求异常\r\n\r\nimport axios from 'axios'\r\nimport { message } from 'antd';\r\n//指定默认值\r\nexport default function ajax(url, data = {}, method = 'GET') {\r\n\r\n    return new Promise ((resolve,_)=>{\r\n        let promise;\r\n        //1. 执行异步ajax请求\r\n        if (method === 'GET') {\r\n            promise = axios.get(url, { params: data })\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        //2. 成功调用resolve\r\n        promise.then(response=>{\r\n            resolve(response)\r\n        })\r\n        //3. 失败不调用reject，而是提示异常信息\r\n        .catch(error=>{\r\n            message.error('请求出错了： '+error.message)\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// //请求登录接口\r\n// ajax('/login', { username: 'admin', password: \"admin\" }, 'POST');\r\n// //添加用户\r\n// ajax('/manage/user/add', { username: 'tom', password: \"123\",phone:\"1231231234567\" }, 'POST');\r\n\r\n","//包含应用中所有接口请求函数的模块\r\n//每个函数的返回值都是promise对象\r\nimport ajax from './ajax'\r\nimport jsonp from 'jsonp'\r\nimport { message } from 'antd'\r\n\r\n//1. 登录接口\r\nexport const reqLogin = (username, password) => ajax('/login', { username, password }, 'POST')\r\n\r\n//2. 添加用户接口\r\n//3. 更新用户接口\r\nexport const reqAddOrUpdateUser = (user) => ajax('/manage/user/' + (user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n//4. 获取用户列表\r\nexport const reqUsers = () => ajax('/manage/user/list')\r\n\r\n//5. 删除用户\r\nexport const reqDeleteUser = (userId) => ajax('/manage/user/delete', { userId }, 'POST')\r\n\r\n//6. 获取一级或二级分类的列表\r\nexport const reqCategories = (parentId) => ajax('/manage/category/list', { parentId })\r\n\r\n//7. 添加一级或二级分类\r\nexport const reqAddCategory = (parentId, categoryName) => ajax('/manage/category/add', { parentId, categoryName }, 'POST')\r\n\r\n//8. 更新一级或二级分类的名字\r\nexport const reqUpdateCategory = (categoryId, categoryName) => ajax('/manage/category/update', { categoryId, categoryName }, 'POST')\r\n\r\n//9. 根据分类ID获取分类\r\nexport const reqCategory = (categoryId) => ajax('/manage/category/info', { categoryId })\r\n\r\n//10. 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax('/manage/product/list', { pageNum, pageSize })\r\n\r\n//11. 搜索商品分页列表 searchType:搜索的类型，productName/productDesc\r\nexport const reqSearchProducts = (pageNum, pageSize, searchName, searchType) => ajax('/manage/product/search', { pageSize, pageNum, [searchType]: searchName })\r\n\r\n//12. 添加商品\r\n//13. 更新商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax('/manage/product/' + (product._id ? 'update' : 'add'), product, 'POST')\r\n\r\n//14. 更新商品的状态（上架/下架）\r\nexport const reqUpdateStatus = (productId, status) => ajax('/manage/product/updateStatus', { productId, status }, 'POST')\r\n\r\n//15. 添加图片 upload自动请求\r\n\r\n//16. 删除图片\r\nexport const reqDeleteImg = (name) => ajax('/manage/img/delete', { name }, 'POST')\r\n\r\n//17. 添加角色\r\nexport const reqAddRole = (roleName) => ajax('/manage/role/add', { roleName }, 'POST')\r\n\r\n//18. 获取所有角色列表\r\nexport const reqRoles = () => ajax('/manage/role/list')\r\n\r\n//19. 更新角色，给角色设置权限\r\nexport const reqUpdateRole = (role) => ajax('/manage/role/update', role, 'POST')\r\n\r\n//21. 给角色重命名\r\nexport const reqChangeRoleName = (id, name) => ajax('/manage/role/rename', { id, name}, 'POST')\r\n\r\n// jsonp请求地址函数接口\r\nexport const reqLocation = () => {\r\n    return new Promise((resolve,_)=>{\r\n        const urlLocation = 'https://restapi.amap.com/v3/ip?key=b31596256c9e00d77cb696b6ea16e5a8';\r\n        jsonp(urlLocation, {}, (err, data) => {\r\n            if(!err&&data.status==='1'){\r\n                resolve(data.city)\r\n            }else{\r\n                message.error('获取地址信息失败')\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// jsonp请求天气函数接口\r\nexport const reqWeather = () => {\r\n    return new Promise(async(resolve,_)=>{\r\n        var place = await reqLocation();\r\n        const urlWeather = 'https://restapi.amap.com/v3/weather/weatherInfo?key=b31596256c9e00d77cb696b6ea16e5a8&city=' + place;\r\n        jsonp(urlWeather, {}, (err, data) => {\r\n            if (!err && data.status === '1') {\r\n                resolve(data.lives[0])\r\n            } else {\r\n                message.error('获取天气信息失败')\r\n            }\r\n        })\r\n    })\r\n}","import store from 'store'\r\n\r\n//进行local数据存储管理的工具模块\r\nconst USER_KEY = 'user_key'\r\n\r\nvar storageUtils={\r\n    //保存user\r\n    saveUser(user) {\r\n        store.set(USER_KEY,user)\r\n    },\r\n    //读取user\r\n    getUser(){\r\n        return store.get(USER_KEY)||{}\r\n    },\r\n    //删除user\r\n    removeUser(){\r\n        store.remove(USER_KEY)\r\n    }\r\n}\r\n// localStorage只能保存string，如果是对象，自动调用toString（）方法\r\n// var storageUtils = {\r\n//     //保存user\r\n//     saveUser(user) {\r\n//         localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n//     },\r\n//     //读取user\r\n//     getUser() {\r\n//         return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n//     },\r\n//     //删除user\r\n//     removeUser() {\r\n//         localStorage.removeItem(USER_KEY)\r\n//     }\r\n// }\r\n\r\nexport default storageUtils","//包含多个actions creators函数的模块\r\n//同步action：对象{type: 'XXX', data: 数据值}\r\n//异步action：函数 dispatch=>{}\r\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, REST_USER, SET_PRODUCT } from './action-types'\r\nimport { reqLogin } from '../api'\r\nimport storageUtils from '../utils/storageUtils'\r\nimport { message } from 'antd'\r\n\r\n\r\n//设置标题头部的同步action\r\nexport const setHeadTitle = (headTitle) => ({ type: SET_HEAD_TITLE, data: headTitle })\r\n\r\n//接收到user的同步action\r\nconst receiveUser = (user) => ({ type: RECEIVE_USER, user})\r\n\r\n//显示错误信息的同步action\r\nconst showErrorMsg = (errorMsg) => ({ type: SHOW_ERROR_MSG, errorMsg })\r\n\r\n//重置user的同步action\r\nexport const resetUser = () => ({ type: REST_USER, user: {} })\r\n\r\n//设置product\r\nexport const setProduct = (product) => ({ type: SET_PRODUCT, product })\r\n\r\n//登录的异步action\r\nexport const login = (username, password) => {\r\n    return async dispatch => {\r\n        //1. 执行异步ajax请求\r\n        const { data } = await reqLogin(username, password) //{status:0, data: user}/{status:1, msg:'XXX'}\r\n        if(data.status===0){\r\n            //2.1 如果成功，分发成功的同步action\r\n            const user = data.data;\r\n            //保存到localStorage中\r\n            storageUtils.saveUser(user)\r\n            message.success(`你好${user.username}~~~`)\r\n            dispatch(receiveUser(user))\r\n        }else{\r\n            //2.2 如果失败，分发失败的同步action\r\n            dispatch(showErrorMsg(data.msg))\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.b6ca280c.png\";","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login } from '../../redux/actions'\r\nimport './login.less'\r\nimport logo from '../../assets/imgs/logo.png'\r\n// import { reqLogin } from '../../api'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\n// import storeageUtils from '../../utils/storageUtils'\r\n\r\n\r\n//登录的路由组件\r\nclass Login extends Component {\r\n    //提交ajax请求\r\n    onFinish = async (values) => {\r\n        // // 请求登录\r\n        // const response = await reqLogin(values.username, values.password)\r\n        // if (response.data.status===1){\r\n        //     message.error(response.data.msg)\r\n        // }else{\r\n        //     memoryUtils.user = response.data.data;//保存到内存中\r\n        //     storeageUtils.saveUser(response.data.data)//保存到local中\r\n        //     message.success(`你好${response.data.data.username}~~~`)\r\n        //     //不需要在回退，所以用replace\r\n        //     this.props.history.replace('/home')\r\n        // }  \r\n        \r\n        //调用分发异步action的函数=>发异步action请求\r\n        this.props.login(values.username, values.password)\r\n    };\r\n\r\n    //对密码进行自定义验证\r\n    validator = (_, value) => {\r\n        if(!value) {\r\n            return Promise.reject(new Error('需要输入密码哦~~'));\r\n        } else if (value.length < 4 || value.length > 12 || !/^[A-Za-z0-9_]+$/.test(value)) {\r\n            return Promise.reject(new Error('不符合要求哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    render() {\r\n        //判断用户是否登录\r\n        const user = this.props.user;\r\n        if (user && user._id ) {\r\n            //自动跳转到登录（在render中）\r\n            return <Redirect to=\"/home\"></Redirect>\r\n        }\r\n        const errorMsg = this.props.user.errorMsg\r\n        if(errorMsg){\r\n            message.error(errorMsg)\r\n        }\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"徐妞妞妞妞妞妞\"/>\r\n                    <h1>后台管理系统</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{this.props.user.errorMsg}</div>\r\n                    <h2>用户登录</h2>\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                { required: true, whitespace:true, message: '需要输入用户名哦~~' },\r\n                                { min: 4, message: '不能小于4位哦~~' },\r\n                                { max: 12, message: '不能大于12位哦~~'},\r\n                                { pattern:/^[A-Za-z0-9_]+$/, message: '不符合要求哦~~'}\r\n                            ]}\r\n                            // initialValue=\"admin\"\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,0.25)'}} />} placeholder=\"用户名是什么嘞\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { validator: this.validator }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" style={{ color: 'rgba(0,0,0,0.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码是什么嘞\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ user: state.user }),\r\n    { login }\r\n)(Login)","import {\r\n    HomeOutlined,\r\n    AppstoreOutlined,\r\n    ApartmentOutlined,\r\n    AppstoreAddOutlined,\r\n    UserOutlined,\r\n    VerifiedOutlined,\r\n    AreaChartOutlined,\r\n    BarChartOutlined,\r\n    LineChartOutlined,\r\n    PieChartOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n    { title: '首页', key: 'home', isPublic: true, icon: <HomeOutlined /> },\r\n    {\r\n        title: '商品', key: 'sub1', icon: <AppstoreOutlined />, children: [\r\n            { title: '品类管理', key: 'category', icon: <ApartmentOutlined /> },\r\n            { title: '商品管理', key: 'product', icon: <AppstoreAddOutlined /> },\r\n        ]\r\n    },\r\n    { title: '用户管理', key: 'user', icon: <UserOutlined /> },\r\n    { title: '角色管理', key: 'role', icon: <VerifiedOutlined /> },\r\n    {\r\n        title: '图形列表', key: 'sub2', icon: <AreaChartOutlined />, children: [\r\n            { title: '柱状图', key: 'charts/bar', icon: <BarChartOutlined /> },\r\n            { title: '折线图', key: 'charts/line', icon: <LineChartOutlined /> },\r\n            { title: '饼状图', key: 'charts/pie', icon: <PieChartOutlined /> },\r\n        ]\r\n    },\r\n\r\n]\r\n\r\nexport default menuList","import React, { Component } from 'react'\r\nimport { Link, withRouter} from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport { connect } from 'react-redux'\r\n\r\nimport './index.less'\r\nimport logo from '../../assets/imgs/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\n// import memoryUtils from '../../utils/memoryUtils';\r\nimport { setHeadTitle } from '../../redux/actions'\r\n\r\nconst { SubMenu } = Menu;\r\nvar openKey = '';\r\n\r\n//左侧导航的组件\r\nclass LeftNav extends Component {\r\n/*     // 根据menu的数据数组生成对应的标签数组\r\n    getMenuNodes = (menuList) => { \r\n        return menuList.map(item => {\r\n            //有可能是Menu.Item也有可能是SubMenu\r\n            // {\r\n            //     title:\"首页\",\r\n            //     key: \"home\",\r\n            //     icon: \"<MailOutlined />\",\r\n            //     children: []\r\n            // } \r\n            if(!item.children){\r\n                return (\r\n                    <Menu.Item key={item.key} icon={item.icon}>\r\n                        <Link to={`/${item.key}`}>{item.title}</Link>\r\n                    </Menu.Item>\r\n                )\r\n            }else{\r\n                return (\r\n                    <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                        {this.getMenuNodes(item.children)}\r\n                    </SubMenu>\r\n                );\r\n            }\r\n        })\r\n    } */\r\n\r\n\r\n    //判断当前用户对item是否有权限\r\n    hasAuth = (item) => {\r\n        const { key, isPublic } = item;\r\n        const menus = this.props.user.role.menus;\r\n        const username = this.props.user.username;\r\n        //1. 如果当前用户是admin\r\n        //2. 如果当前用户没有设置权限，isPublic===true的菜单\r\n        //3. 当前用户有此item权限\r\n        if (username === 'admin' || isPublic || menus.indexOf(key) !== -1){\r\n            return true;\r\n        } else if (item.children) {\r\n            //如果当前用户有此item的某个子item的权限\r\n            return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 用reduce来实现\r\n    getMenuNodes = (menuList) => {\r\n        return menuList.reduce((pre, item)=>{\r\n            //如果当前用户有item对应的权限，才需要显示对应的菜单项\r\n            if(this.hasAuth(item)){\r\n                //判断item是否为当前对应的item\r\n                if (this.props.location.pathname.slice(1).indexOf(item.key)!==-1){\r\n                    //更新redux中的title\r\n                    this.props.setHeadTitle(item.title)\r\n                }\r\n\r\n                if (!item.children) {\r\n                    pre.push((\r\n                        <Menu.Item key={item.key} icon={item.icon}>\r\n                            <Link to={`/${item.key}`} onClick={() => this.props.setHeadTitle(item.title)}>{item.title}</Link>\r\n                        </Menu.Item>\r\n                    ))\r\n                } else {\r\n                    //查找一个与当前路径匹配的子item\r\n                    const cItem = item.children.find((cItem) => this.props.location.pathname.indexOf(cItem.key) === 1)\r\n                    if (cItem) {\r\n                        openKey = item.key;\r\n                    }\r\n\r\n                    pre.push((\r\n                        <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    ))\r\n                }\r\n            }\r\n            return pre\r\n        },[])\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.menuNodes = this.getMenuNodes(menuList)\r\n    }\r\n    \r\n    render() {\r\n        //得到当前请求的路由路径\r\n        let path = this.props.location.pathname.slice(1)\r\n        if (path.substring(0,7)==='product'){\r\n            path = 'product'\r\n            // openKey='sub1'\r\n        }\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to='/home'>\r\n                    <header className=\"left-nav-header\">\r\n                        <img src={logo} alt=\"妞妞妞妞~\" />\r\n                        <h1>后台~</h1>\r\n                    </header>\r\n                </Link>\r\n                \r\n                <div>\r\n                    <Menu\r\n                        selectedKeys={[path]}\r\n                        defaultOpenKeys={[openKey]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                    >\r\n                        {this.menuNodes}\r\n                    </Menu>\r\n                </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n//因为本身没有location属性，所以需要用withRouter改为路由组件\r\nexport default connect(\r\n    state => ({ headTitle: state.headTitle, user: state.user }),\r\n    { setHeadTitle }\r\n)(withRouter(LeftNav))","//格式化日期\r\nexport default function formDate(time) {\r\n    if (!time) return ''\r\n    let date = new Date(time)\r\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        + ' ' + date.getHours() + ':' + (Number(date.getMinutes()) < 10 ? '0' + date.getMinutes() : date.getMinutes())\r\n        + ':' + (Number(date.getSeconds()) < 10 ? '0' + date.getSeconds() : date.getSeconds())\r\n}\r\n","import React from 'react'\r\nimport './index.less'\r\n//外形像链接的按钮\r\nexport default function LinkButton(props) {\r\n    \r\n    return (\r\n        <button {...props} className=\"link-button\"></button>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Popconfirm, message } from 'antd';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { reqWeather, reqLocation } from '../../api'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport formateDate from '../../utils/dateUtils'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\n// import menuList from '../../config/menuConfig'\r\nimport LinkButton from '../link-button'\r\nimport { resetUser } from '../../redux/actions'\r\nimport \"./index.less\"\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        currentTime: formateDate(Date.now()), //当前时间字符串\r\n        location: '',\r\n        weather: '',\r\n        temperature: ''\r\n    }\r\n\r\n    confirm=()=> {\r\n        storageUtils.removeUser();\r\n        this.props.resetUser()\r\n        this.props.history.replace('/login')\r\n        message.success('您已退出登录');\r\n    }\r\n\r\n    getLocation = async () => {\r\n        const data=await reqLocation();\r\n        this.setState({location:data})\r\n    }\r\n    getWeather = async () => {\r\n        const { weather, temperature} = await reqWeather();\r\n        this.setState({ weather, temperature})\r\n    }\r\n\r\n    getTitle = ()=>{\r\n        // //得到当前请求路径\r\n        // const path=this.props.location.pathname.slice(1);\r\n        // let title = '';\r\n        // menuList.forEach(item=>{\r\n        //     if(item.key===path){\r\n        //         title=item.title;\r\n        //     } else if (item.children){\r\n        //         const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n        //         if (cItem){\r\n        //             title=cItem.title;\r\n        //         }\r\n        //     }\r\n        // })\r\n        // return title;\r\n        return this.props.headTitle\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timeInterval=setInterval(() => {\r\n            this.setState({ currentTime: formateDate(Date.now())})\r\n        }, 1000);\r\n        this.getLocation();\r\n        this.getWeather();\r\n        this.secondTimeInterval=setInterval(() => {\r\n            this.getLocation();\r\n            this.getWeather();\r\n        }, 60000);\r\n    }\r\n        \r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeInterval)\r\n        clearInterval(this.secondTimeInterval)\r\n    }\r\n\r\n    render() {\r\n        const {currentTime,location,weather, temperature} = this.state\r\n        const { username } = this.props.user\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{username}</span>\r\n                    <Popconfirm\r\n                        title=\"确定要退出吗`(*>﹏<*)′\"\r\n                        onConfirm={this.confirm}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <LinkButton>退出</LinkButton>\r\n                        {/* <a href=\"/login\">退出</a> */}\r\n                    </Popconfirm>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{this.getTitle()}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        <span>{`城市：${location}`}</span>\r\n                        <span>{`天气：${weather}`}</span>\r\n                        <span>{`温度：${temperature}`}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect\r\n    (\r\n        state => ({ headTitle: state.headTitle, user: state.user }),\r\n        { resetUser}\r\n    )(withRouter(Header))\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n//图表管理的路由\r\nexport default class Bar extends Component {\r\n\r\n    option = {\r\n        title: {\r\n            text: '折线图堆叠'\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        legend: {\r\n            data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\r\n        },\r\n        grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        toolbox: {\r\n            feature: {\r\n                saveAsImage: {}\r\n            }\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [\r\n            {\r\n                name: '邮件营销',\r\n                type: 'line',\r\n                stack: '总量',\r\n                data: [120, 132, 101, 134, 90, 230, 210]\r\n            },\r\n            {\r\n                name: '联盟广告',\r\n                type: 'line',\r\n                stack: '总量',\r\n                data: [220, 182, 191, 234, 290, 330, 310]\r\n            },\r\n            {\r\n                name: '视频广告',\r\n                type: 'line',\r\n                stack: '总量',\r\n                data: [150, 232, 201, 154, 190, 330, 410]\r\n            },\r\n            {\r\n                name: '直接访问',\r\n                type: 'line',\r\n                stack: '总量',\r\n                data: [320, 332, 301, 334, 390, 330, 320]\r\n            },\r\n            {\r\n                name: '搜索引擎',\r\n                type: 'line',\r\n                stack: '总量',\r\n                data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"home-line\">\r\n                <ReactEcharts option={this.option} style={{ minHeight: '100%' }} />\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n","import { Card, Statistic } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport { QuestionCircleOutlined, ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons'\r\nimport './home.less'\r\nimport Line from './line'\r\n//home的路由组件\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <Card \r\n                    className=\"home-card\"\r\n                    title='商品总量'\r\n                    extra={<QuestionCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />}\r\n                >\r\n                    <Statistic value={112893} suffix=\"个\" style={{ fontWeight: 'bolder' }}/>\r\n                    <Statistic\r\n                        value={15}\r\n                        prefix={'周同比'}\r\n                        valueStyle={{ fontSize: 15 }}\r\n                        suffix={<div>%<ArrowUpOutlined style={{ color: 'red', marginLeft: 10 }}/></div>}\r\n                    />\r\n                    <Statistic\r\n                        value={19}\r\n                        prefix={'日同比'}\r\n                        valueStyle={{ fontSize: 15 }}\r\n                        suffix={<div>%<ArrowDownOutlined style={{ color: 'green', marginLeft: 10 }} /></div>}\r\n                    />\r\n                </Card>\r\n                <Line lassName=\"home-line\"></Line>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Select, Input } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst { Option } = Select;\r\nexport default class AddCategory extends Component {\r\n    validator = (_, value) => {\r\n        if(!value) {\r\n            return Promise.reject(new Error('需要输入分类名称哦~~'));\r\n        }else if(value.trim()===''){\r\n            return Promise.reject(new Error('分类名称不能全是空格哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    static propTypes={\r\n        categories: PropTypes.array.isRequired, //一级分类的数组\r\n        parentId: PropTypes.string.isRequired, //父分类id\r\n        addValues: PropTypes.func.isRequired, //向父组件传递ref\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form layout=\"vertical\" className=\"addCategory-form\" ref={(c) => { this.form = c; this.props.addValues(this.form)}}>\r\n                <Form.Item initialValue={this.props.parentId} label=\"所属分类：\" name=\"parentId\" rules={[{ required: true, message: '所属分类是什么嘞' }]}>\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"分类是什么嘞~~\"\r\n                        showSearch\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        <Option value=\"0\">一级分类</Option>\r\n                        {this.props.categories.map((category) => <Option value={category._id} children={category.name} key={category._id}></Option>)}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"分类名称：\" name=\"categoryName\" rules={[{ validator: this.validator }]} required>\r\n                    <Input placeholder=\"分类名称是什么嘞~~\"></Input>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Input } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class UpdateCategory extends Component {\r\n    //对表现属性进行限制\r\n    static propTypes={\r\n        categoryName: PropTypes.string.isRequired,\r\n        updateValue: PropTypes.func.isRequired,\r\n    }\r\n\r\n    validator = (_, value) => {\r\n        if (!value) {\r\n            return Promise.reject(new Error('需要输入分类名称哦~~'));\r\n        } else if (value.trim() === '') {\r\n            return Promise.reject(new Error('分类名称不能全是空格哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    render() {\r\n        return (\r\n            <Form layout=\"vertical\" className=\"updateCategory-form\">\r\n                <Form.Item initialValue={this.props.categoryName} label=\"分类名称：\" name=\"categoryName\" rules={[{ validator: this.validator }]} required>\r\n                    <Input placeholder=\"分类名称是什么嘞~~\" onChange={(event) => { this.props.updateValue(event.target.value);}}></Input>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, message, Modal } from 'antd';\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons';\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategories, reqUpdateCategory, reqAddCategory } from '../../api'\r\nimport AddCategory from './addCategory'\r\nimport UpdateCategory from './updateCategory'\r\n\r\nexport default class category extends Component {\r\n    state={\r\n        categoryList:[], //一级分类列表\r\n        subCategoryList:[], //二级分类列表\r\n        loading:true, //是否正在获取数据\r\n        parentId:\"0\", //默认获取一级分类列表\r\n        parentName: '', //当前需要显示的分类列表的父分类名称\r\n        visible: 0, //添加更新的确认框是否显示，0都不显示，1显示添加，2显示更新\r\n    }\r\n\r\n    //定义基本信息\r\n    columns = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            width: '35%',\r\n            align: 'center',\r\n            render: (category) => (\r\n                <span>\r\n                    <LinkButton onClick={() => { this.setState({ visible: 2 }); this.category = category}}>修改分类</LinkButton>\r\n                    {this.state.parentId === \"0\" ? <LinkButton onClick={this.showSubCategoryList(category)}>查看子分类</LinkButton>:null}\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n    \r\n    //card的右侧额外信息\r\n    extra = <Button type=\"primary\" shape=\"round\" onClick={()=>this.setState({visible:1})}><PlusOutlined />添加</Button>;\r\n    //默认category\r\n    category={name:''}\r\n\r\n    //显示二级分类列表\r\n    showSubCategoryList = (category)=>{\r\n        return () => {\r\n            this.setState({parentId:category._id, parentName:category.name},()=>{ //setState是异步更新的，在状态更新且重新render（）后执行\r\n                this.getCategoryList()\r\n            })\r\n        }\r\n    }\r\n\r\n    //显示一级分类列表\r\n    showFirstCategoryList = ()=>{\r\n        this.setState({\r\n            subCategoryList: [], //二级分类列表\r\n            parentId: \"0\", //默认获取一级分类列表\r\n            parentName: ''\r\n        }, () => { this.getCategoryList()})\r\n        \r\n    }\r\n\r\n    //异步获取一、二级分类列表显示\r\n    getCategoryList = async () => {\r\n        this.setState({loading:true})\r\n        const parentId = this.state.parentId\r\n        //发异步ajax请求获取数据\r\n        const result = await reqCategories(parentId)\r\n        if(result.data.status===0){\r\n            //更新state状态\r\n            if(parentId==='0'){\r\n                this.setState({ categoryList: result.data.data, loading: false })\r\n            }else{\r\n                this.setState({ subCategoryList: result.data.data, loading: false })\r\n            }\r\n        }else{\r\n            message.error('获取分类列表失败~~~')\r\n        }\r\n    }\r\n\r\n    //点击增加目录\r\n    handleAddOk =  () => {\r\n        //进行表单验证\r\n        this.addForm.validateFields()\r\n            .then(async (values)=>{\r\n            this.setState({ visible: 0 }) //1. 隐藏确认框\r\n            const { parentId, categoryName } = values\r\n            //2. 发送请求\r\n            let result = await reqAddCategory(parentId, categoryName)\r\n            if (result.data.status === 0) {\r\n                this.getCategoryList() //3. 重新显示列表\r\n            } else {\r\n                message.error('添加分类列表失败~~~')\r\n            }\r\n            })\r\n            .catch(() => { })\r\n    }\r\n\r\n    //点击更新目录\r\n    handleUpdateOk = async () => {\r\n        if (this.updateName.trim() !== '' && this.updateName) {\r\n            this.setState({ visible: 0 }) //1. 隐藏确认框\r\n            //2. 发送请求\r\n            let result = await reqUpdateCategory(this.category._id, this.updateName)\r\n            if (result.data.status === 0) {\r\n                this.getCategoryList() //3. 重新显示列表\r\n            } else {\r\n                message.error('更新分类列表失败~~~')\r\n            }\r\n        }\r\n    }\r\n\r\n    //定义函数处理更新目录\r\n    updateValue=(value)=>{\r\n        this.updateName = value //updateName为从子组件获得的名字\r\n    }\r\n\r\n    //定义函数处理增加目录\r\n    addValues=(value)=>{\r\n        this.addForm=value\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCategoryList() //获取一级分类列表显示\r\n    }\r\n\r\n    render() {\r\n        //card的左侧标题\r\n        let title = this.state.parentId === \"0\" ? <span style={{marginLeft:6}}>一级分类列表</span> : (\r\n            <span>\r\n                <LinkButton onClick={this.showFirstCategoryList}>一级分类列表</LinkButton>\r\n                <ArrowRightOutlined style={{marginRight:5}}/> \r\n                <span>{this.state.parentName}</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <Card title={title} extra={this.extra} style={{ width: '100%', height:'100%' }}>\r\n                <Table \r\n                    style={{ width: '100%', height: '100%' }}\r\n                    bordered rowKey=\"_id\" loading={this.state.loading} \r\n                    pagination={{ defaultPageSize: 5, showQuickJumper:true}} \r\n                    dataSource={this.state.parentId === '0' ? this.state.categoryList : this.state.subCategoryList} \r\n                    columns={this.columns} \r\n                />\r\n\r\n                <Modal title=\"添加分类\" destroyOnClose visible={this.state.visible === 1} onOk={this.handleAddOk} onCancel={() => this.setState({ visible: 0 })} cancelText='取消' okText='确定'>\r\n                    <AddCategory categories={this.state.categoryList} parentId={this.state.parentId} addValues={this.addValues}></AddCategory>\r\n                </Modal>\r\n\r\n                <Modal title=\"修改分类\" destroyOnClose visible={this.state.visible === 2} onOk={this.handleUpdateOk} onCancel={() => this.setState({ visible: 0 })} cancelText='取消' okText='确定'>\r\n                    <UpdateCategory categoryName={this.category.name || ''} updateValue={this.updateValue}></UpdateCategory>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","//包含所有常量值的模块\r\nexport const PAGE_SIZE=3 //每一页显示的条数\r\nexport const BASE_IMG_URL = \"http://localhost:5000/upload/\"","import React, { Component } from 'react'\r\nimport { Card, Select, Input, Button, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setProduct } from '../../redux/actions'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from '../../api'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n\r\nconst Option = Select.Option\r\n//product默认子路由组件\r\nclass ProductHome extends Component {\r\n    state={\r\n        total:0, //商品的总数量\r\n        product:[], //商品的数组\r\n        loading: false, //是否正在加载中\r\n        searchName: '',  //搜索的关键字\r\n        searchType: 'productName', //根据哪个字段搜索\r\n    }\r\n    \r\n\r\n    status=1\r\n    //card的右侧额外信息\r\n    extra = <Button type=\"primary\" shape=\"round\" onClick={()=>this.props.history.push('/product/addupdate')}><PlusOutlined />添加</Button>;\r\n    //Table列的数组要求\r\n    columns = [\r\n        {\r\n            align: 'center',\r\n            title: '商品名称',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            align: 'center',\r\n            title: '商品描述',\r\n            dataIndex: 'desc',\r\n            key: 'desc',\r\n        },\r\n        {\r\n            align: 'center',\r\n            width: '7%',\r\n            title: '价格',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            render: (price)=> '￥'+price //当前制定了对应的属性，传入的是对应的属性值\r\n        },\r\n        {\r\n            align: 'center',\r\n            width: '7%',\r\n            title: '状态',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status,product)=>{\r\n                return (\r\n                    <span>\r\n                        <Button type='primary' onClick={() => this.updateStatus(product._id, status === 1 ? 2 : 1)}>\r\n                            {product.status===1?'下架':'上架'}\r\n                        </Button>\r\n                        <br />\r\n                        <span>{product.status === 2 ? '已下架' : '在售'}</span>\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            align: 'center',\r\n            width: '7%',\r\n            title: '操作',\r\n            render: (product) => {\r\n                return (\r\n                    <span>\r\n                        {/* 将product对象作为目标路由组件 */}\r\n                        <LinkButton onClick={() => { this.props.history.push('/product/detail'); this.props.setProduct(product)}}>详情</LinkButton>\r\n                        <LinkButton onClick={() => { this.props.history.push('/product/addupdate'); this.props.setProduct(product) }}>修改</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    updateStatus=async (id,status)=>{\r\n        const {data}=await reqUpdateStatus(id,status)\r\n        if (data.status===0){\r\n            message.success('更新成功啦~~~')\r\n            this.getProducts(this.pageNum)\r\n        } else {\r\n            message.error('添加分类列表失败~~~')\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    //获取指定页码的列表数据显示\r\n    getProducts=(pageNum)=>{\r\n        this.pageNum=pageNum; //保存pageNum让其他方法可以看到\r\n        this.setState({ loading: true }, async()=>{\r\n            //如果搜索关键字有值，则为搜索分页\r\n            if(this.state.searchName){\r\n                let { data } = await reqSearchProducts(pageNum, PAGE_SIZE, this.state.searchName, this.state.searchType)\r\n                if (data.status === 0) {\r\n                    let { total, list } = data.data;\r\n                    this.setState({ total, product: list, loading: false })\r\n                }else{\r\n                    message.error('添加分类列表失败~~~')\r\n                    this.setState({ loading: false })\r\n                }\r\n            }else{\r\n                let { data } = await reqProducts(pageNum, PAGE_SIZE)\r\n                if (data.status === 0) {\r\n                    let { total, list } = data.data;\r\n                    this.setState({ total, product: list, loading: false })\r\n                } else {\r\n                    message.error('添加分类列表失败~~~')\r\n                    this.setState({ loading: false })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    //render后发送请求\r\n    componentDidMount(){\r\n        this.getProducts(1)\r\n    }\r\n\r\n    render() {\r\n        const title = (\r\n            <span>\r\n                <Select defaultValue={this.state.searchType} style={{ width: '15%' }} onChange={(searchType) => this.setState({ searchType })}>\r\n                    <Option value='productName'>按名称搜索</Option>\r\n                    <Option value='productDesc'>按描述搜索</Option>\r\n                </Select>\r\n                <Input placeholder=\"搜索啥嘞~\" style={{ width: \"20%\", margin: '0 15px' }} defaultValue={this.state.searchName} onChange={(e) => this.setState({ searchName: e.target.value })}></Input>\r\n                <Button type='primary' onClick={()=>this.getProducts(1)}>搜索</Button>\r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title} extra={this.extra} style={{ width: '100%', height: '100%' }}>\r\n                <Table \r\n                    dataSource={this.state.product} columns={this.columns} \r\n                    bordered rowKey='_id' style={{ width: '100%', height: '100%' }}\r\n                    pagination={{ \r\n                        defaultPageSize: PAGE_SIZE, showQuickJumper: true, total: this.state.total,\r\n                        onChange: this.getProducts,\r\n                    }}\r\n                    loading={this.state.loading}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ product: state.product }),\r\n    { setProduct }\r\n)(ProductHome)","import React, { Component } from 'react'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { reqDeleteImg } from '../../api'\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\n//用于图片上传的组件\r\nexport default class PicturesWall extends Component {\r\n    state = {\r\n        previewVisible: false, //标识是否显示modal预览\r\n        previewTitle: '', //modal图片的标题\r\n        previewImage: '', //modal图片的url\r\n        fileList: [],\r\n    };\r\n\r\n    static propTypes = {\r\n        imgs: PropTypes.array\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //一旦传入imgs属性\r\n        const { imgs } = this.props\r\n        if (imgs && imgs.length > 0){\r\n            let fileList=imgs.map((img,index)=>({\r\n                uid: -index, //每个file都有自己的唯一id\r\n                name: img, //图片文件名\r\n                status: 'done',\r\n                url: BASE_IMG_URL+img,\r\n            }))\r\n            this.state.fileList=fileList\r\n        }\r\n    }\r\n\r\n    //将modal隐藏，隐藏图片\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        // console.log('handlePreview',file)\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n        });\r\n    };\r\n\r\n    //fileList：是所有已上传文件图片的数组\r\n    //file：是当前操作的图片文件（上传/删除）\r\n    handleChange = async ({ file, fileList }) => {\r\n        //一旦文件上传成功，就将上传的file的信息进行修正（name和url）\r\n        if (file.status === \"done\") {\r\n            const result = file.response;\r\n            if(result.status===0){\r\n                message.success('图片上传成功啦~~~')\r\n                const { name, url } = result.data;\r\n                fileList[fileList.length - 1].name = name;\r\n                fileList[fileList.length - 1].url = url;\r\n                // console.log('handleChange', file, fileList)\r\n            }else{\r\n                message.error('欸？服务器开小差了哦，失败啦')\r\n            }\r\n        } else if (file.status === \"removed\") {\r\n            // console.log(fileList,file)\r\n            const {data}=await reqDeleteImg(file.name)\r\n            if(data.status===0){\r\n                message.success('删除成功啦')\r\n            }else{\r\n                message.error('删除失败，服务器开小差啦')\r\n            }\r\n        }\r\n        //在上传或删除过程中及时更新图片列表\r\n        this.setState({ fileList });\r\n    }\r\n\r\n    //获取所有已上传的图片文件名数组\r\n    getImgs=()=>{\r\n        return this.state.fileList.map(file => file.name)\r\n    }\r\n\r\n    render() {\r\n        const { previewVisible, previewTitle, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>上传图片</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <>\r\n                <Upload\r\n                    action=\"/manage/img/upload\"//上传图片的接口地址\r\n                    accept=\"image/*\" //直接收图片类型的文件\r\n                    listType=\"picture-card\" //卡片样式\r\n                    name='image'//发到后台的文件参数名\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {fileList.length >= 3 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal\r\n                    visible={previewVisible}\r\n                    title={previewTitle}\r\n                    footer={null}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <img alt=\"图片\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import { EditorState } from 'draft-js';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport PropTypes from 'prop-types'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\n//用来指定商品详情的富文本编辑器\r\nexport default class RickTextEditor extends Component {\r\n\r\n    static propTypes = {\r\n        detail: PropTypes.string,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const html = this.props.detail;\r\n        if(html){\r\n            const contentBlock = htmlToDraft(html);\r\n            if (contentBlock) {\r\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                this.state = {\r\n                    editorState,\r\n                };\r\n            }\r\n        }else{\r\n            this.state = {\r\n                editorState: EditorState.createEmpty(), //创建一个没有内容的编辑器\r\n            }\r\n        }\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    //工具栏上传图片\r\n    uploadImageCallBack = (file) => {\r\n        return new Promise(\r\n            (resolve, reject) => {\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.open('POST', '/manage/img/upload');\r\n                // xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n                const data = new FormData();\r\n                data.append('image', file); //name是image\r\n                xhr.send(data);\r\n                xhr.addEventListener('load', () => {\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const url = response.data.url;\r\n                    resolve({ data: { link: url } })\r\n                });\r\n                xhr.addEventListener('error', () => {\r\n                    const error = JSON.parse(xhr.responseText);\r\n                    reject(error);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    //给父组件提供得到的文本\r\n    getDetail=()=>{\r\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n    }\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div>\r\n                <Editor\r\n                    editorState={editorState}\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorStyle={{ border: '1px solid gray', minHeight: 200, padding: 10 }}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                        // inline: { inDropdown: true },\r\n                        // list: { inDropdown: true },\r\n                        // textAlign: { inDropdown: true },\r\n                        // link: { inDropdown: true },\r\n                        // history: { inDropdown: true },\r\n                        image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n                    }}\r\n                />\r\n                {/* <textarea\r\n                    disabled\r\n                    value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n                /> */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Form, Input, Cascader, Button, message } from 'antd';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setProduct } from '../../redux/actions'\r\nimport PicturesWall from './pictures-wall';\r\nimport RichTextEditor from './rich-text-editor'\r\nimport { reqCategories, reqAddOrUpdateProduct } from '../../api'\r\nimport LinkButton from '../../components/link-button';\r\n\r\nconst { Item } = Form\r\nconst { TextArea } = Input;\r\n\r\n//产品添加更新的子路由\r\nclass AddUpdate extends Component {\r\n    state = {\r\n        options:[],\r\n    }\r\n\r\n    //根据categories生成options数组更新状态\r\n    initOptions = async (categories) => {\r\n        const options = categories.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: false,\r\n        }))\r\n\r\n        //如果是一个二级分类商品的更新\r\n        const { isUpdate, product } = this;\r\n        const { pCategoryId } = product;\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            //获取对应的二级分类列表\r\n            const subCategories=await this.getCategories(pCategoryId)\r\n            const childOptions = subCategories.map(subC => ({\r\n                label: subC.name,\r\n                value: subC._id,\r\n                parentId: subC.parentId,\r\n                isLeaf: true,\r\n            }))\r\n            //关联到对应的一级option上\r\n            const pIndex = options.findIndex(c => c.value === pCategoryId);\r\n            options[pIndex].children = childOptions;\r\n        }\r\n\r\n        this.setState({ options })\r\n    }\r\n\r\n    //获取一级或者二级分类列表\r\n    getCategories = async (parentId) => {\r\n        const {data} = await reqCategories(parentId)\r\n        if(data.status===0){\r\n            const categories=data.data;\r\n            //如果是一级分类列表\r\n            if (parentId===0){\r\n                this.initOptions(categories)\r\n            }else{\r\n                //二级列表\r\n                return categories\r\n            }\r\n        }else{\r\n            message.error('获取列表错误')\r\n        }\r\n    }\r\n\r\n    //验证函数必须有值\r\n    validatorRequired = (_, value) => {\r\n        if (!value||value.length===0) {\r\n            return Promise.reject(new Error('需要输入哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    //Cascader级联器加载下一级数据的函数\r\n    loadData = async selectedOptions => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1]; //得到选择的option对象\r\n        targetOption.loading = true; //显示loading效果\r\n\r\n        //根据选中的分类，请求获取二级分类\r\n        const subCategories = await this.getCategories(targetOption.value)\r\n        if (subCategories && subCategories.length>0){\r\n            //有二级分类\r\n            targetOption.children = subCategories.map(subC=>({\r\n                label: subC.name,\r\n                value: subC._id,\r\n                parentId: subC.parentId,\r\n                isLeaf: true,\r\n            }));\r\n            targetOption.loading = false;\r\n        }else{\r\n            //没有二级分类\r\n            targetOption.loading = false;\r\n            targetOption.isLeaf = true\r\n        }\r\n        this.setState({ options: [...this.state.options] });\r\n    };\r\n\r\n    //提交函数\r\n    onFinish = async (datas) => {\r\n        //1. 收集数据，并封装成product对象\r\n        const { name, desc, price, categoryIds } = datas;\r\n        const imgs = this.picturesWall.current.getImgs()\r\n        const detail = this.richTextEditor.current.getDetail()\r\n        let pCategoryId, categoryId;\r\n        if(categoryIds.length===1){\r\n            pCategoryId = '0';\r\n            categoryId=categoryIds[0];\r\n        }else{\r\n            pCategoryId = categoryIds[0];\r\n            categoryId = categoryIds[1];\r\n        }\r\n\r\n        const product = { name, desc, price, pCategoryId, categoryId, imgs, detail}\r\n        //如果是更新，需要添加_id\r\n        if(this.isUpdate){\r\n            product._id=this.product._id\r\n        }\r\n        \r\n        //2. 调用接口请求函数去添加/更新\r\n        const { data } = await reqAddOrUpdateProduct(product)\r\n        //3. 根据结果提示\r\n        if (data.status===0){\r\n            message.success(`${this.isUpdate ? '更新' : '添加'}商品成功啦~~`)\r\n            this.props.history.push('/product')\r\n        }else{\r\n            message.error(`${this.isUpdate ? '更新' : '添加'}商品失败了哦`)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategories(0)\r\n    }\r\n\r\n    //取出携带的state\r\n    constructor(props){\r\n        super(props);\r\n        const product=this.props.product\r\n        //保存是否为更新的标识\r\n        this.isUpdate=!!product._id\r\n        this.product = product || {}\r\n\r\n        // console.log(product)\r\n\r\n        //创建用来保存ref标识的标签对象的容器\r\n        this.picturesWall = React.createRef();\r\n        this.richTextEditor = React.createRef();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.setProduct({})\r\n    }\r\n\r\n    render() {\r\n        const title=(\r\n            <span>\r\n                <LinkButton onClick={()=>this.props.history.goBack()}><ArrowLeftOutlined style={{ marginRight: 10, fontSize: 20 }} /></LinkButton>\r\n                {this.isUpdate ? <span>修改商品</span> : <span>添加商品</span>}\r\n            </span>\r\n        )\r\n\r\n        //设定form的样式\r\n        const formItemLayout = {\r\n            labelCol:{span:3}, //左侧label的宽度\r\n            wrapperCol:{span:12}, //指定右侧包裹的宽度\r\n        }\r\n\r\n        //用来接收级联分类ID的数组\r\n        const categoryIds = [];\r\n        const { pCategoryId, categoryId, imgs } = this.product;\r\n        if(this.isUpdate){\r\n            //商品是一级分类的商品\r\n            if(pCategoryId==='0'){\r\n                categoryIds.push(categoryId)\r\n            }else{\r\n                //商品是二级分类的商品\r\n                categoryIds.push(pCategoryId)\r\n                categoryIds.push(categoryId)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Card title={title} style={{ width: '100%', height: '100%' }}>\r\n                <Form {...formItemLayout} onFinish={this.onFinish} ref={c => { this.form = c;}} initialValues={{ remember: false }}>\r\n                    <Item label=\"商品名称\" name=\"name\" initialValue={this.product.name} rules={[{ validator: this.validatorRequired }]} required>\r\n                        <Input placeholder=\"商品名称叫什么嘞~~~\" ></Input>\r\n                    </Item>\r\n                    <Item label=\"商品描述\" name='desc' initialValue={this.product.desc}>\r\n                        <TextArea placeholder=\"有啥子描述呢~~~\" autoSize={{ minRows: 2, maxRows: 6 }} />\r\n                    </Item>\r\n                    <Item label=\"商品价格\" required name='price' initialValue={this.product.price} rules={[{ validator: (_, value) => value * 1 >= 0 ? Promise.resolve() : Promise.reject(new Error('价格不能小于0哦~~~')) }, { validator: this.validatorRequired }]}>\r\n                        <Input type='number'  placeholder=\"商品好多钱嘞~~~\" addonAfter=\"元\"></Input>\r\n                    </Item>\r\n                    <Item label=\"商品分类\" initialValue={categoryIds} rules={[{ validator: this.validatorRequired }]} required name='categoryIds'>\r\n                        <Cascader \r\n                            placeholder=\"选择吧\"\r\n                            options={this.state.options}  //需要展示的列表数据\r\n                            loadData={this.loadData}  //当选择某个列表项，加载下一列表的回调函数\r\n                        />\r\n                    </Item>\r\n                    <Item label=\"商品图片\">\r\n                        <PicturesWall ref={this.picturesWall} imgs={imgs}/>\r\n                    </Item>\r\n                    <Item label=\"商品详情\" labelCol={{ span: 3 }} wrapperCol={{ span: 20 }}>\r\n                        <RichTextEditor ref={this.richTextEditor} detail={this.product.detail}/>\r\n                    </Item>\r\n                    <Item style={{ display: 'flex', justifyContent: 'center' }} labelCol={{ span: 23 }} wrapperCol={{ span: 1 }}>\r\n                        <Button type='primary' shape=\"round\" htmlType=\"submit\">提交</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ product: state.product }),\r\n    { setProduct }\r\n)(AddUpdate)\r\n","import React, { Component } from 'react'\r\nimport { Card, List } from 'antd';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport LinkButton from '../../components/link-button';\r\nimport { reqCategory } from '../../api'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport { setProduct } from '../../redux/actions'\r\n\r\nconst Item = List.Item;\r\nclass Detail extends Component {\r\n    state={\r\n        cName1: '',//一级分类名称\r\n        cName2: '',//二级分类名称\r\n    }\r\n\r\n    async componentDidMount(){\r\n        //得到当前商品的分类ID\r\n        const { pCategoryId, categoryId } = this.props.product\r\n        if (pCategoryId==='0'){\r\n            //一级分类下的产品\r\n            const { data } = await reqCategory(categoryId)\r\n            this.setState({cName1:data.data.name})\r\n        }else{\r\n            //二级分类下的产品\r\n            // const { data: result1} = await reqCategory(pCategoryId) //获取一级分类列表\r\n            // const { data: result2 } = await reqCategory(categoryId) //获取二级分类列表\r\n            const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n            const cName1 = results[0].data.data.name\r\n            const cName2 = results[1].data.data.name\r\n            this.setState({ cName1, cName2})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setProduct({})\r\n    }\r\n\r\n    render() {\r\n        //读取携带的state数据\r\n        const { name, desc, price, detail, imgs } = this.props.product;\r\n        \r\n        const title=(\r\n            <span>\r\n                <LinkButton onClick={()=>this.props.history.goBack()}><ArrowLeftOutlined style={{ marginRight: 10, fontSize: 20 }} /></LinkButton>\r\n                <span>商品详情</span>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title} className='product-detail' style={{ width: '100%', height: '100%' }}>\r\n                <List >\r\n                    <Item>\r\n                        <span className=\"left\">商品名称：</span>\r\n                        <span>{name}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品描述：</span>\r\n                        <span>{desc}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品价格：</span>\r\n                        <span>{price}元</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">所属分类：</span>\r\n                        <span>{this.state.cName1} {this.state.cName2 ? '-->' + this.state.cName2:null}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品图片：</span>\r\n                        {\r\n                            imgs.map(img=>(\r\n                                <img className='product-img' key={img} src={BASE_IMG_URL + img} alt=\"图片\" />\r\n                            ))\r\n                        }\r\n\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品详情：</span>\r\n                        <span dangerouslySetInnerHTML={{__html: detail}}></span>\r\n                    </Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ product: state.product }),\r\n    { setProduct }\r\n)(Detail)\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport ProductHome from './product-home'\r\nimport AddUpdate from './add-update'\r\nimport Detail from './detail'\r\nimport './product.less'\r\n\r\n//商品管理的路由\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%', height: '100%' }}>\r\n                <Switch>\r\n                    {/* 路径完全匹配 */}\r\n                    <Route path=\"/product\" exact component={ProductHome}></Route> \r\n                    <Route path='/product/addupdate' component={AddUpdate}></Route>\r\n                    <Route path='/product/detail' component={Detail}></Route>\r\n                    <Redirect to='/product'></Redirect>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport { Form, Input, Select } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Option = Select.Option;\r\n\r\n//添加或修改用户的form组件\r\nexport default class AddUpdateUser extends PureComponent {\r\n\r\n    //对表格属性进行限制\r\n    static propTypes = {\r\n        getForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n        roles: PropTypes.array.isRequired,\r\n        user: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getForm(this.form)\r\n    }\r\n\r\n    //对密码进行自定义验证\r\n    validator = (_, value) => {\r\n        if (!value) {\r\n            return Promise.reject(new Error('需要输入密码哦~~'));\r\n        } else if (value.length < 4 || value.length > 12 || !/^[A-Za-z0-9_]+$/.test(value)) {\r\n            return Promise.reject(new Error('不符合要求哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    render() {\r\n        const layout = {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 20 },\r\n        };\r\n\r\n        const user = this.props.user || {}\r\n\r\n        return (\r\n            <Form className=\"AddUpdateRole-form\" ref={c => this.form = c} {...layout}>\r\n                <Form.Item\r\n                    initialValue={user.username}\r\n                    label=\"用户名：\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        { required: true, whitespace: true, message: '需要输入用户名哦~~' },\r\n                        { min: 4, message: '不能小于4位哦~~' },\r\n                        { max: 12, message: '不能大于12位哦~~' },\r\n                        { pattern: /^[A-Za-z0-9_]+$/, message: '不符合要求哦~~' }\r\n                    ]} required\r\n                >\r\n                    <Input placeholder=\"用户名称是什么嘞~~\" ></Input>\r\n                </Form.Item>\r\n                {\r\n                    user._id?null:(\r\n                        <Form.Item label=\"密码：\" name=\"password\" initialValue={user.password} rules={[{ validator: this.validator }]} required>\r\n                            <Input type='password' placeholder=\"密码是什么嘞~~\" ></Input>\r\n                        </Form.Item>\r\n                    )\r\n                }\r\n                <Form.Item label=\"电话：\" name=\"phone\" initialValue={user.phone}>\r\n                    <Input placeholder=\"电话是什么嘞~~\" ></Input>\r\n                </Form.Item>\r\n                <Form.Item label=\"邮箱：\" name=\"email\" initialValue={user.email} rules={[{ pattern: new RegExp('^[0-9a-zA-Z\\\\.]+@[0-9a-zA-Z]+\\\\.[a-zA-Z]+$'), message: '邮箱格式不对哦~'}]}>\r\n                    <Input placeholder=\"邮箱是什么嘞~~\" ></Input>\r\n                </Form.Item>\r\n                <Form.Item label=\"角色：\" name=\"role_id\" initialValue={user.role_id}>\r\n                    <Select placeholder=\"角色是什么嘞~~\">\r\n                        {\r\n                            this.props.roles.map(role => (\r\n                                <Option key={role._id} value={role._id} children={role.name} />\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Button, Modal, message, Popconfirm } from 'antd'\r\n\r\nimport AddUpdateUser from './add-update';\r\nimport formDate from '../../utils/dateUtils'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqAddOrUpdateUser, reqDeleteUser, reqUsers } from '../../api'\r\n\r\n//用户管理的路由\r\nexport default class User extends Component {\r\n    \r\n    state = {\r\n        loading: true,//Table是否处于加载\r\n        visible: false,//false看不到Modal\r\n        users: [],//所有用户的列表\r\n        roles: [],//所有角色的列表\r\n        selectedUser: {}, //点击修改所选择的user\r\n    }\r\n\r\n    //定义基本信息\r\n    columns = [\r\n        {\r\n            title: '账号',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '邮箱',\r\n            key: 'email',\r\n            dataIndex: 'email',\r\n            align: 'center',\r\n        },\r\n       {\r\n            title: '电话',\r\n            key: 'phone',\r\n            dataIndex: 'phone',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            key: 'create_time',\r\n            dataIndex: 'create_time',\r\n            align: 'center',\r\n            render: formDate,\r\n        },\r\n        {\r\n            title: '所属角色',\r\n            key: 'role_id',\r\n            dataIndex: 'role_id',\r\n            align: 'center',\r\n            render: (role_id) => this.roleNames[role_id]\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            align: 'center',\r\n            render: (user) => (\r\n                <span>\r\n                    <LinkButton onClick={() => this.setState({ visible: true, selectedUser: user })}>修改</LinkButton>\r\n\r\n                    <Popconfirm\r\n                        title={\"确定要删除\" + user.username + \"吗`(*>﹏<*)′\"}\r\n                        onConfirm={() => this.deleteUser(user)}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <LinkButton >删除</LinkButton>\r\n                    </Popconfirm>\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n\r\n    //处理添加或更新用户\r\n    handleModalOk = () => {\r\n        //1.收集输入的数据\r\n        if (Object.keys(this.state.selectedUser).length===0){\r\n            this.form.validateFields()\r\n                .then(async (user) => {\r\n                    //2.提交请求\r\n                    const { data } = await reqAddOrUpdateUser(user)\r\n                    if (data.status === 0) {\r\n                        //3.更新列表显示\r\n                        this.setState({ visible: false })\r\n                        this.getUsers()\r\n                        message.success('创建用户成功啦~~~')\r\n                    } else {\r\n                        message.error(data.msg)\r\n                        this.setState({ visible: false })\r\n                    }\r\n                })\r\n                .catch(() => { })\r\n        } else {\r\n            this.form.validateFields()\r\n                .then(async (user) => {\r\n                    //2.提交请求\r\n                    const newUser = {...this.state.selectedUser, ...user}\r\n                    const { data } = await reqAddOrUpdateUser(newUser)\r\n                    if (data.status === 0) {\r\n                        //3.更新列表显示\r\n                        this.setState({ visible: false, selectedUser: {} })\r\n                        this.getUsers()\r\n                        message.success('修改用户成功啦~~~')\r\n                    } else {\r\n                        message.error(data.msg)\r\n                        this.setState({ visible: false, selectedUser: {} })\r\n                    }\r\n                })\r\n                .catch(() => { })\r\n        }\r\n\r\n    }\r\n\r\n    //获得添加或修改用户的Form组件\r\n    getForm = (form) => {\r\n        this.form = form\r\n    }\r\n\r\n    //删除User的回调函数\r\n    deleteUser = async (user)=>{\r\n        const { data } = await reqDeleteUser(user._id)\r\n        if(data.status===0){\r\n            message.success('删除用户成功啦~~')\r\n            this.getUsers()\r\n        }else{\r\n            message.error('服务器开小差了哦')\r\n        }\r\n    }\r\n\r\n    //根据roles的数组生成包含key为_id的值，value为name的对象\r\n    initRoleNames = (roles) => {\r\n        const roleNames = roles.reduce((pre, role) => {\r\n            pre[role._id] = role.name\r\n            return pre\r\n        },{})\r\n        this.roleNames = roleNames\r\n    }\r\n\r\n    //获取用户列表,调用initRoleNames\r\n    getUsers = () => {\r\n        this.setState({ loading: true }, async () => {\r\n            const { data } = await reqUsers()\r\n            if (data.status === 0) {\r\n                this.initRoleNames(data.data.roles)\r\n                this.setState({ loading: false, users: data.data.users, roles: data.data.roles })\r\n            } else {\r\n                message.error('哦？服务器开小差了')\r\n            }\r\n        })\r\n    }\r\n\r\n    //调用getUsers\r\n    componentDidMount(){\r\n        this.getUsers()\r\n    }\r\n\r\n    render() {\r\n        const title=(\r\n            <Button type='primary' shape='round' onClick={() => this.setState({ visible: true })}>添加用户</Button>\r\n        )\r\n        \r\n        return (\r\n            <Card title={title} style={{ minHeight: '100%', minWidth: '100%' }}>\r\n                <Table\r\n                    bordered \r\n                    rowKey=\"_id\" \r\n                    loading={this.state.loading}\r\n                    dataSource={this.state.users}\r\n                    columns={this.columns}\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                />\r\n\r\n                <Modal title={Object.keys(this.state.selectedUser).length === 0 ? '添加用户' : `修改${this.state.selectedUser.username}`} destroyOnClose visible={this.state.visible} onOk={this.handleModalOk} onCancel={() => this.setState({ visible: false, selectedUser: {} })} cancelText='取消' okText='确定'>\r\n                    <AddUpdateUser getForm={this.getForm} roles={this.state.roles} user={this.state.selectedUser}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class AddRole extends Component {\r\n\r\n    //对表格属性进行限制\r\n    static propTypes = {\r\n        getForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getForm(this.form)\r\n    }\r\n\r\n    validator = (_, value) => {\r\n        if (!value) {\r\n            return Promise.reject(new Error('需要输入角色名称哦~~'));\r\n        } else if (value.trim() === '') {\r\n            return Promise.reject(new Error('角色名称不能全是空格哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form layout=\"vertical\" className=\"AddRole-form\" ref={c => this.form = c}>\r\n                <Form.Item label=\"角色名称：\" name=\"roleName\" rules={[{ validator: this.validator }]} required>\r\n                    <Input placeholder=\"角色名称是什么嘞~~\" ></Input>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Tree } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport menuList from '../../config/menuConfig'\r\n\r\nexport default class AuthRole extends Component {\r\n\r\n    static propTypes={\r\n        role: PropTypes.object.isRequired,//需要传入角色对象来获得menu和name\r\n    }\r\n\r\n    //初始treeData\r\n    treeData = [\r\n        {\r\n            title: '平台权限',\r\n            key: 'all',\r\n            children: [],\r\n        },\r\n    ];\r\n\r\n    //点击多选框时候的回调函数\r\n    onCheck = (checkedKeys) => {\r\n        this.setState({ checkedKeys })\r\n        // console.log('onCheck', checkedKeys);\r\n    };\r\n\r\n    //给父组件提供选择key的函数\r\n    getMenus = () => this.state.checkedKeys\r\n\r\n    //配置treeData\r\n    getTreeData = (menuList) => {\r\n        // menuList.forEach(item => {\r\n        //     let children = [];\r\n        //     if (item.children) {\r\n        //         item.children.forEach(subItem => {\r\n        //             children = [...children, { title: subItem.title, key: subItem.key}]\r\n        //         })                \r\n        //     }\r\n        //     this.treeData[0].children = [...this.treeData[0].children, { title: item.title, key: item.key, children }]\r\n        // })\r\n\r\n        return menuList.map(item => {\r\n            return {\r\n                title:item.title,\r\n                key:item.key,\r\n                children: item.children ? this.getTreeData(item.children) : null\r\n            }\r\n        })\r\n    }\r\n\r\n    //配置treeData和checkedKeys，调用getTreeData\r\n    constructor(props) {\r\n        super(props);\r\n        this.treeData[0].children = this.getTreeData(menuList)\r\n\r\n        //默认选择的key,根据传入角色的menus生成初始状态\r\n        this.state = {\r\n            checkedKeys: this.props.role.menus, //选中的数组\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Form layout=\"horizontal\" className=\"AuthRole-form\" >\r\n                    <Form.Item label=\"角色名称：\" name=\"roleName\" initialValue={this.props.role.name}>\r\n                        <Input disabled />\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                    checkedKeys={this.state.checkedKeys}\r\n                    onCheck={this.onCheck}\r\n                    treeData={this.treeData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ChangeName extends Component {\r\n\r\n    //对表格属性进行限制\r\n    static propTypes = {\r\n        getForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n        selectedRole: PropTypes.object.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getForm(this.form)\r\n    }\r\n\r\n    validator = (_, value) => {\r\n        if (!value) {\r\n            return Promise.reject(new Error('需要输入角色名称哦~~'));\r\n        } else if (value.trim() === '') {\r\n            return Promise.reject(new Error('角色名称不能全是空格哦~~'));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form layout=\"vertical\" className=\"ChangeRoleName-form\" ref={c => this.form = c}>\r\n                <Form.Item label=\"角色名称：\" name=\"roleName\" rules={[{ validator: this.validator }]} initialValue={this.props.selectedRole.name}  required>\r\n                    <Input placeholder=\"角色名称是什么嘞~~\" ></Input>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, message, Modal } from 'antd'\r\nimport { connect } from 'react-redux'\r\n\r\nimport AddRole from './add-role'\r\nimport AuthRole from './auth-role'\r\nimport ChangeName from './change-name'\r\nimport LinkButton from '../../components/link-button'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport { reqAddRole, reqRoles, reqChangeRoleName, reqUpdateRole } from '../../api'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport { resetUser } from '../../redux/actions'\r\n\r\n//权限管理的路由\r\nclass Role extends Component {\r\n    state = {\r\n        roles: [], //所有角色的列表\r\n        selectedRole: {}, //选中的role\r\n        visiable: 0, //添加修改是否显示，0都不显示，1显示添加，2显示更新，3更改名称\r\n        loading: true\r\n    }\r\n\r\n    //Table列的信息\r\n    columns = [\r\n        {\r\n            align: 'center',\r\n            title: '角色名称',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            align: 'center',\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time',\r\n            render: formateDate\r\n        },\r\n        {\r\n            align: 'center',\r\n            title: '授权时间',\r\n            dataIndex: 'auth_time',\r\n            key: 'auth_time',\r\n            render: formateDate\r\n        }, \r\n        {\r\n            align: 'center',\r\n            title: '授权人',\r\n            dataIndex: 'auth_name',\r\n            key: 'auth_name',\r\n        },\r\n        {\r\n            align: 'center',\r\n            title: '操作',\r\n            render:(role)=>{\r\n                return (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.setState({ visible: 3 })}>修改</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    //Table中设置行属性，点击某一行\r\n    onRow = (role) => {\r\n        return {\r\n            onClick: () => { //点击了行\r\n                this.setState({ selectedRole: role })\r\n            }\r\n        }\r\n    }\r\n\r\n    //Table中设置rowSelection，点击radio框\r\n    onSelect = (record) => this.setState({ selectedRole: record })\r\n\r\n    //获得子组件的form对象（添加）\r\n    getFormAdd = (form) => this.addRole = form\r\n\r\n    //点击添加Modal的确认的回调函数\r\n    handleAddOk = () => {\r\n        //进行表单验证，只有通过了才继续\r\n        this.addRole.validateFields()\r\n            .then(async value => {\r\n                this.setState({ visible: 0 });\r\n                //收集输入数据\r\n                const { roleName } = value;\r\n                //请求添加\r\n                const { data } = await reqAddRole(roleName)\r\n                //根据结果更新显示\r\n                if(data.status===0){\r\n                    message.success('创建角色成功啦~别忘了设置权限哦')\r\n                    this.setState({ roles: [...this.state.roles, data.data] })\r\n                }else{\r\n                    message.error('创建角色失败，服务器开小差了')\r\n                }\r\n            })\r\n            .catch(()=> {\r\n            })\r\n    }\r\n\r\n    //点击修改角色权限的回调函数\r\n    handleAuthOk = async () => {\r\n        this.setState({ visible: 0 });\r\n        let selectedRole = this.state.selectedRole;\r\n        selectedRole.menus = this.authRole.getMenus();\r\n        // selectedRole.auth_name = memoryUtils.user.username\r\n        selectedRole.auth_name = this.props.user.username\r\n\r\n        // console.log(selectedRole)\r\n\r\n        //请求更新\r\n        const { data } = await reqUpdateRole(selectedRole)\r\n        if (data.status === 0) {\r\n\r\n            //如果当前更新的是自己的角色的权限，强制退出\r\n            if (selectedRole._id === this.props.user.role_id) {\r\n                // memoryUtils.user={};\r\n                this.props.resetUser()\r\n                storageUtils.removeUser();\r\n                this.props.history.replace('/login')\r\n                message.success('设置角色权限成功啦，改变了当前用户的权限需要重新登录哦~')\r\n            }else{\r\n                message.success('设置角色权限成功啦~~~')\r\n                this.setState({ selectedRole })\r\n                this.getRoles()\r\n            }\r\n        }else{\r\n            message.error('欸？服务器开小差了欸')\r\n        }\r\n    }\r\n\r\n\r\n    //获得子组件的form对象（修改名称）\r\n    getFormChangeName = (form) => this.changeName = form\r\n\r\n    //点击修改角色名称的回调函数\r\n    handleChangeNameOk=()=>{\r\n        //进行表单验证，只有通过了才继续\r\n        this.changeName.validateFields()\r\n            .then(async value => {\r\n                this.setState({ visible: 0 });\r\n                //收集输入数据\r\n                const { roleName } = value;\r\n                //请求添加\r\n                const { data } = await reqChangeRoleName(this.state.selectedRole._id, roleName)\r\n                //根据结果更新显示\r\n                if (data.status === 0) {\r\n                    message.success('修改名称成功啦~~')\r\n                    this.getRoles()\r\n                    this.setState({ selectedRole: {} })\r\n                } else {\r\n                    message.error('修改名称失败，服务器开小差了')\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n\r\n    //发送请求获取所有role列表\r\n    getRoles = async () => {\r\n        const { data } = await reqRoles();\r\n        if (data.status === 0) {\r\n            const roles = data.data;\r\n            this.setState({ roles, loading: false });\r\n        } else {\r\n            message.error('服务器开小差了，获取角色列表失败！')\r\n        }\r\n    }\r\n\r\n    //调用getRoles()\r\n    componentDidMount() {\r\n        this.getRoles()\r\n    }\r\n\r\n\r\n    render() {\r\n        const title=(\r\n            <span>\r\n                <Button type=\"primary\" shape='round' style={{ marginRight: 10 }} onClick={() => this.setState({ visible: 1 })}>创建角色</Button>\r\n                <Button type=\"primary\" shape='round' disabled={!this.state.selectedRole._id} onClick={() => this.setState({ visible: 2 })}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title} style={{ minHeight: '100%', minWidth: '100%' }}>\r\n                <Table \r\n                    rowKey=\"_id\"\r\n                    dataSource={this.state.roles}\r\n                    columns={this.columns}\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                    onRow={this.onRow}\r\n                    rowSelection={{ type: 'radio', selectedRowKeys: [this.state.selectedRole._id], onSelect: this.onSelect }}\r\n                    bordered\r\n                    loading={this.state.loading}\r\n                />\r\n                \r\n                <Modal title=\"创建角色\" destroyOnClose visible={this.state.visible === 1} onOk={this.handleAddOk} onCancel={() => this.setState({ visible: 0 })} cancelText='取消' okText='确定'>\r\n                    <AddRole getForm={this.getFormAdd} />\r\n                </Modal>\r\n\r\n                <Modal title=\"设置角色权限\" destroyOnClose visible={this.state.visible === 2} onOk={this.handleAuthOk} onCancel={() => this.setState({ visible: 0 })} cancelText='取消' okText='确定'>\r\n                    <AuthRole role={this.state.selectedRole} ref={(c) => this.authRole = c} />\r\n                </Modal>\r\n\r\n                <Modal title=\"更改角色名称\" destroyOnClose visible={this.state.visible === 3} onOk={this.handleChangeNameOk} onCancel={() => this.setState({ visible: 0 })} cancelText='取消' okText='确定'>\r\n                    <ChangeName getForm={this.getFormChangeName} selectedRole={this.state.selectedRole}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    { resetUser }\r\n)(Role)","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n//图表管理的路由\r\nexport default class Bar extends Component {\r\n\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20 ], //销量的数组\r\n        stores: [7, 27, 38, 18, 15, 30], //库存的数组\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state => ({\r\n            sales: state.sales.map(value => value + 1),\r\n            stores: state.stores.reduce((pre, value) => [...pre, value + 5], []),\r\n        }))\r\n    }\r\n\r\n    //返回柱状图的配置对象\r\n    getOption = (sales, stores)=>{\r\n        return (\r\n            {\r\n                title: {\r\n                    text: 'ECharts'\r\n                },\r\n                tooltip: { trigger: 'axis',},\r\n                legend: {\r\n                    data: ['销量', '库存']\r\n                },\r\n                xAxis: {\r\n                    data: [\"戴尔\", \"神州\", \"测试1\", \"测试2\", \"测试3\", \"测试4\"]\r\n                },\r\n                yAxis: {},\r\n                series: [\r\n                    {\r\n                        name: '销量',\r\n                        type: 'bar',\r\n                        data: sales\r\n                    },\r\n                    {\r\n                        name: '库存',\r\n                        type: 'bar',\r\n                        data: stores\r\n                    }\r\n                ],\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { sales, stores } = this.state\r\n        const title = <Button type='primary' shape='round' onClick={this.update}>柱状图更新</Button>\r\n        return (\r\n            <Card title={title} style={{ minHeight: '100%', minWidth: '100%' }}>\r\n                <ReactEcharts option={this.getOption(sales, stores)} style={{ minHeight: '100%' }} />\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n\r\n//图表管理的路由\r\nexport default class Line extends Component {\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20],\r\n        inventorys: [15, 30, 46, 20, 20, 40]\r\n    }\r\n    getOption = () => {\r\n        const { sales, inventorys } = this.state\r\n        return {\r\n            title: {\r\n                text: 'ECharts'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'line',\r\n                data: sales\r\n            }, {\r\n                name: '库存',\r\n                type: 'line',\r\n                data: inventorys\r\n            }]\r\n        }\r\n    }\r\n    getOption2 = () => {\r\n        return {\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n                type: 'line',\r\n                areaStyle: {}\r\n            }]\r\n        };\r\n    }\r\n    update = () => {\r\n        const sales = this.state.sales.map(sale => sale + 1)\r\n        const inventorys = this.state.inventorys.map(inventory => inventory - 1)\r\n        this.setState({\r\n            sales,\r\n            inventorys\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ minHeight: \"100%\" }} >\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n                <Card title='折线图一'>\r\n                    <ReactEcharts option={this.getOption()} />\r\n                </Card>\r\n                <Card title='折线图二'>\r\n                    <ReactEcharts option={this.getOption2()}  />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n\r\n//图表管理的路由\r\nexport default class Pie extends Component {\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n                text: '某站点用户访问来源',\r\n                subtext: '纯属虚构',\r\n                x: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '60%'],\r\n                    data: [\r\n                        { value: 335, name: '直接访问' },\r\n                        { value: 310, name: '邮件营销' },\r\n                        { value: 234, name: '联盟广告' },\r\n                        { value: 135, name: '视频广告' },\r\n                        { value: 1548, name: '搜索引擎' }\r\n                    ],\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    getOption2 = () => {\r\n        return {\r\n            backgroundColor: '#2c343c',\r\n            title: {\r\n                text: 'Customized Pie',\r\n                left: 'center',\r\n                top: 20,\r\n                textStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            visualMap: {\r\n                show: false,\r\n                min: 80,\r\n                max: 600,\r\n                inRange: {\r\n                    colorLightness: [0, 1]\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '50%'],\r\n                    data: [\r\n                        { value: 335, name: '直接访问' },\r\n                        { value: 310, name: '邮件营销' },\r\n                        { value: 274, name: '联盟广告' },\r\n                        { value: 235, name: '视频广告' },\r\n                        { value: 400, name: '搜索引擎' }\r\n                    ].sort(function (a, b) { return a.value - b.value; }),\r\n                    roseType: 'radius',\r\n                    label: {\r\n                        normal: {\r\n                            textStyle: {\r\n                                color: 'rgba(255, 255, 255, 0.3)'\r\n                            }\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        normal: {\r\n                            lineStyle: {\r\n                                color: 'rgba(255, 255, 255, 0.3)'\r\n                            },\r\n                            smooth: 0.2,\r\n                            length: 10,\r\n                            length2: 20\r\n                        }\r\n                    },\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: '#c23531',\r\n                            shadowBlur: 200,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    },\r\n                    animationType: 'scale',\r\n                    animationEasing: 'elasticOut',\r\n                    animationDelay: function (idx) {\r\n                        return Math.random() * 200;\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ minHeight: \"100%\" }}>\r\n                <Card title='饼图一'>\r\n                    <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n                </Card>\r\n                <Card title='饼图二'>\r\n                    <ReactEcharts option={this.getOption2()} style={{ height: 300 }} />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Row, Col } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { setHeadTitle } from '../../redux/actions'\r\nimport './not-found.less'\r\n/*\r\n前台404 页面\r\n*/\r\nclass NotFound extends Component {\r\n    goHome = () => {\r\n        this.props.setHeadTitle('首页')\r\n        this.props.history.replace('/home')\r\n    }\r\n    render() {\r\n        this.props.setHeadTitle('404')\r\n        return (\r\n            <Row className='not-found'>\r\n                <Col span={12} className='left'></Col>\r\n                <Col span={12} className='right'>\r\n                    <h1>404</h1>\r\n                    <h2>抱歉，你访问的页面不存在</h2>\r\n                    <div>\r\n                        <Button type='primary' onClick={this.goHome}>\r\n                            回到首页\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { setHeadTitle }\r\n)(NotFound)\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Switch, Route } from 'react-router';\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\n\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport User from '../user/user'\r\nimport Role from '../role/role'\r\nimport Bar from '../chart/bar'\r\nimport Line from '../chart/line'\r\nimport Pie from '../chart/pie'\r\nimport NotFound from '../not-found/not-found';\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n//主界面的路由组件\r\nclass Admin extends Component {\r\n    render() {\r\n        const user = this.props.user;\r\n        //如果内存中没有存储user ==> 当前没有登录\r\n        if (!user || !user._id) {\r\n            //自动跳转到登录（在render中）\r\n            return <Redirect to=\"/login\"></Redirect>\r\n        }\r\n        return (\r\n            \r\n            <Layout style={{minHeight:'100%'}}>\r\n                <Sider><LeftNav style={{ minHeight: '100%' }}/></Sider>\r\n                <Layout>\r\n                    <Header/>\r\n                    <Content style={{backgroundColor:\"#fff\",margin:\"20px\"}}>\r\n                        <Switch>\r\n                            <Redirect from='/' to='/home' exact/>\r\n                            <Route path='/home' component={Home} />\r\n                            <Route path='/category' component={Category} />\r\n                            <Route path='/product' component={Product} />\r\n                            <Route path='/role' component={Role} />\r\n                            <Route path='/user' component={User} />\r\n                            <Route path='/charts/bar' component={Bar} />\r\n                            <Route path='/charts/line' component={Line} />\r\n                            <Route path='/charts/pie' component={Pie} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </Content>\r\n\r\n                    <Footer style={{\r\n                        textAlign:'center',\r\n                        margin:'auto',\r\n                        fontSize:'15px',\r\n                        color:'gray',\r\n                        // backgroundColor: 'white',\r\n                        backgroundColor:'#f0f2f5',\r\n                        width:'100%',\r\n                        display:'flex',\r\n                        minHeight:'5%',\r\n                        alignItems:'flex-end',\r\n                        justifyContent: 'center'\r\n                    }}>后台管理系统 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello {user.username}\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        \r\n        )\r\n    }\r\n}\r\nexport default connect((state) => ({ user: state.user }))(Admin)\r\n","import React, { Component, Fragment } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.less'\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Fragment>\n        <Switch>\n          <Route path=\"/login\" component={Login}></Route>\n          <Route path=\"/\" component={Admin}></Route>\n        </Switch>\n      </Fragment>\n    )\n  }\n}\n","//用来根据现有的state指定的action生成并返回新的state的纯函数\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, REST_USER, SET_PRODUCT } from './action-types'\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\n//用来管理头部标题的reducer函数\r\nconst initHeadTitle = '首页'\r\nfunction headTitle(state = initHeadTitle, action) {\r\n    switch (action.type) {\r\n        case SET_HEAD_TITLE:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//用来管理当前登录用户的reducer函数\r\nconst initUser = storageUtils.getUser()\r\nfunction user(state = initUser, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USER:\r\n            return action.user\r\n        case SHOW_ERROR_MSG:\r\n            const errorMsg=action.errorMsg\r\n            return { ...state, errorMsg } //不要直接修改原本的状态数据\r\n        case REST_USER:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//product路由中指定的商品对象\r\nfunction product(state = {}, action) {\r\n    switch (action.type) {\r\n        case SET_PRODUCT:\r\n            return action.product;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//向外默认暴露的是合并产生的总的reducer函数\r\n//管理总的state的结构：{headTitle: '首页', user={XXX}}\r\nexport default combineReducers({\r\n    headTitle,\r\n    user,\r\n    product\r\n})","//这是redux最核心的管理对象store\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer'\r\n\r\n\r\n//默认暴露store\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter, HashRouter } from 'react-router-dom'\nimport { HashRouter } from 'react-router-dom'\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\n// 读取local中保存的user，保存到内存中\n// import storageUtils from './utils/storageUtils'\n// import memoryUtils from './utils/memoryUtils'\n// const user = storageUtils.getUser()\n// memoryUtils.user=user;\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}